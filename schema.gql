# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  id: Float!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AuthorDto {
  id: Float
  name: String!
}

type Book {
  id: Float!
  title: String!
  authorId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  author: Author!
}

input BookAuthorConnectDto {
  id: Float!
}

input BookAuthorDto {
  connect: BookAuthorConnectDto
  create: AuthorDto
}

type BookGenre {
  id: Float!
  bookId: Float!
  genreId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input BookInput {
  title: String!
  author: BookAuthorDto!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Genre {
  id: Float!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  book: [Book!]
}

input GenreBookDto {
  genreId: Float!
  bookId: Float!
}

input GenreDto {
  name: String!
}

type Mutation {
  createAuthor(data: AuthorDto!): Author!
  updateAuthor(data: AuthorDto!): Author!
  createBook(data: BookInput!): Book!
  createBookGenre(data: GenreBookDto!): BookGenre!
  createGenre(data: GenreDto!): Genre!
}

type Query {
  authors: [Author!]!
  author(id: Float!): Author
  books: [Book!]!
  book(id: Float!): Book
  bookGenres: [BookGenre!]!
  bookGenre(id: Float!): BookGenre!
  genres: [Genre!]!
  genre(id: Float!): Genre
}
